FORMAT: 1A

# eDocz API

eDocz is a simple API allowing consumers to perform CRUD on their documents and their role documents.

## Roles [/roles]


### Create new Role [POST /roles]
An admin can create more roles using this endpoint.

+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

    + Body
    
            {
                "role": "Facilitator",
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "arole": {
                    "id": 6,
                    "role": "facilitator",
                    "updatedAt": "2017-07-19T10:49:42.483Z",
                    "createdAt": "2017-07-19T10:49:42.483Z"
                },
                "message": "Created Successfully"
            }


### List all Role [GET /roles]
An admin can retrieve roles using this endpoint.

+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)
    
    + Body
    
            [
                {
                    "id": 1,
                    "role": "admin",
                    "createdAt": "2017-07-18T07:26:52.057Z",
                    "updatedAt": "2017-07-18T07:26:52.057Z"
                },
                {
                    "id": 2,
                    "role": "support engineer",
                    "createdAt": "2017-07-18T07:26:52.057Z",
                    "updatedAt": "2017-07-18T07:26:52.057Z"
                },
                {
                    "id": 5,
                    "role": "Facilitator",
                    "createdAt": "2017-07-18T14:12:26.604Z",
                    "updatedAt": "2017-07-18T14:12:26.604Z"
                },
                {
                    "id": 6,
                    "role": "facilitator",
                    "createdAt": "2017-07-19T10:49:42.483Z",
                    "updatedAt": "2017-07-19T10:49:42.483Z"
                }
            ]

### Delete Role by id [DELETE /roles/5]
An admin can delete a specified role using this endpoint.

+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)
    
    + Body
    
            {
                "message": "Role Deleted Successfully"
            }
            
            

## Users [/users]



### Create new User [POST /users]
A new user is created using this endpoint and the roles should be existing following the required field roleType a foreign key of the roles table.

+ Request (application/json)
      + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

    + Body
    
            {
                "firstName": "Nick",
                "lastName": "Latte",
                "email": "latte@test.com",
                "password": "Qwerty@1234",
                "roleType": "admin",
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "message": "User Created Successfully",
                "firstName": "euni",
                "lastName": "shi",
                "id": 33
            }

### Logins a User [POST /users/login]
Logins an existing user and in process creates a  session token for that user.

+ Request (application/json)

    + Body
    
            {
                "email": "latte@test.com",
                "password": "Qwerty@1234",
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "message": "Loggin Successful.",
                "email": "victory@gmail.com",
                "Token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzMsInJvbGVUeXBlIjoiYWRtaW4iLCJpYXQiOjE1MDA0NTg2NTUsImV4cCI6MTUwMDQ4NDM5NX0.D0IVh9m7vnLFUtBCePjWsuLOCjYPY0YzrnCF4PTHUvY"
            }

### Logs out a User [POST /users/logout]
It deletes the token so that a user to perform any opeartions needs to re login for token to be created.

+ Request (application/json)


+ Response 200 (application/json)
    
    + Body
    
            {
                "message": "Successfully logged out"
            }

### List all users without offset [GET /users]
The user is able to perform this opeartion provided he or she is authenticated and an admin
+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        [
            {
                "id": 2,
                "firstName": "Euniqx",
                "lastName": "shee",
                "email": "victorywanjiru@gmail.com",
                "password": "$2a$05$stqwbwMj2H7k4Ug92WdwXOIOj8/4D8fPZ8zY/IRQuRBgcNruUkLJS",
                "createdAt": "2017-07-18T09:10:15.236Z",
                "updatedAt": "2017-07-18T09:10:15.236Z",
                "roleType": "support engineer"
            },
            {
                "id": 1,
                "firstName": "admin",
                "lastName": "admin",
                "email": "admin@test.com",
                "password": "$2a$05$FZItHNEDfac4AW3mnd20deHYxOwtbY8zDOB.1BDI7LgOq9a0n/vue",
                "createdAt": "2017-07-18T07:26:52.147Z",
                "updatedAt": "2017-07-18T10:49:12.248Z",
                "roleType": "admin"
            }
        ]

### List all users with offset [GET /users/?limit=2&offset=2]
The user is able to perform this opeartion provided he or she is authenticated and an admin.
This operation gives the user choice of number of users to display and from which user. It has been used in creation of pagination.
+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        [
            {
                "id": 3,
                "firstName": "shem",
                "lastName": "ogumbe",
                "email": "shem@gmail.com",
                "password": "$2a$05$dYLLEJAiRE7h463yc1aVe.0OBgI9lIoPpxZEvIj3Rwaux1Hh9FQKW",
                "createdAt": "2017-07-18T14:02:14.840Z",
                "updatedAt": "2017-07-18T14:30:50.974Z",
                "roleType": "Facilitator"
            },
            {
                "id": 4,
                "firstName": "eunice",
                "lastName": "wanjiru",
                "email": "eunice.wanjiru@andela.com",
                "password": "$2a$05$74qP6OpsHnTjx64zYgj83eB5lD8D7D2FEvY.IhXofkPdHFkiAcQFq",
                "createdAt": "2017-07-18T14:06:02.659Z",
                "updatedAt": "2017-07-18T14:06:02.659Z",
                "roleType": "support engineer"
            }
        ]
        
        
### List  user by Id [GET /users/1]
Can be performed by an authenticated admin.

+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        {
            "firstName": "Euniqx",
            "lastName": "shee",
            "email": "victorywanjiru@gmail.com"
        }

### Edit user by Id [PUT /users/1]
user must be an authenticated admin.

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    
    + Body
    
            {
                "firstName": "Edited Nick",
                "lastName": "Latte",
                "email": "latte@test.com",
                "roleType": "admin",
            }        

+ Response 200 (application/json)

        {
            "message": "user updated Successfully.",
            "updatedUser": {
                "id": 2,
                "firstName": "edited Nick",
                "lastName": "wanjiru",
                "email": "latte@test.com",
                "password": "Qwerty@1234",
                "createdAt": "2017-07-18T09:10:15.236Z",
                "updatedAt": "2017-07-19T10:29:00.622Z",
                "roleType": "admin"
            }
        }



### Get user documents [GET /users/1/documents]
Performed by an authenticated user.
Retrieves the documents of a particular user.
+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        {
            "userDocuments": [
                {
                    "id": 2,
                    "title": "asdasd dasdasd ssdsdasdasd",
                    "content": "dasdasdasddds dsds dss sadsad",
                    "access": "admin",
                    "createdAt": "2017-07-18T07:30:45.330Z",
                    "updatedAt": "2017-07-18T07:31:35.238Z",
                    "userId": 1
                },
                {
                    "id": 13,
                    "title": "ww weqweqwe",
                    "content": "wqwq eqweqweqweqweqerwerwer",
                    "access": "public",
                    "createdAt": "2017-07-18T11:28:55.697Z",
                    "updatedAt": "2017-07-18T11:28:55.697Z",
                    "userId": 1
                },
                {
                    "id": 14,
                    "title": "test",
                    "content": "sdsd fadasd",
                    "access": "private",
                    "createdAt": "2017-07-18T12:27:25.320Z",
                    "updatedAt": "2017-07-18T12:27:25.320Z",
                    "userId": 1
                },
                {
                    "id": 15,
                    "title": "sds",
                    "content": "dsfsdds",
                    "access": "public",
                    "createdAt": "2017-07-18T12:30:31.658Z",
                    "updatedAt": "2017-07-18T12:30:31.658Z",
                    "userId": 1
                },
                {
                    "id": 34,
                    "title": "React Base Fiddle (JSX)",
                    "content": "jtduewy dsfjgsdgfsd fsdgfghdsgh",
                    "access": "admin",
                    "createdAt": "2017-07-18T14:57:40.033Z",
                    "updatedAt": "2017-07-18T14:57:40.033Z",
                    "userId": 1
                },
                {
                    "id": 53,
                    "title": "Api Documentation",
                    "content": "this is the api documentation for the eDocz system",
                    "access": "public",
                    "createdAt": "2017-07-19T08:13:28.442Z",
                    "updatedAt": "2017-07-19T08:13:28.442Z",
                    "userId": 1
                }
            ]
        }
          

### Search  user by firstName [GET /search/users/?q=t]
Performed by an authenticated admin.
This opeartion allows an admin to search a user using characters of the firstName.

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        [
            {
                "id": 15,
                "firstName": "test",
                "lastName": "user",
                "email": "testuser@gmail.com",
                "password": "$2a$05$BJ1bTFUQFTqkuwFl.oDx9eIBXcWJeGUgTBwYHKXNdCd11UUSqQelK",
                "createdAt": "2017-07-18T14:59:03.063Z",
                "updatedAt": "2017-07-18T14:59:03.063Z",
                "roleType": "support engineer"
            },
            {
                "id": 2,
                "firstName": "edited Nick",
                "lastName": "wanjiru",
                "email": "victorywanjiru@gmail.com",
                "password": "Qwerty@1234",
                "createdAt": "2017-07-18T09:10:15.236Z",
                "updatedAt": "2017-07-19T10:29:00.622Z",
                "roleType": "admin"
            }
        ]

### Delete  user by Id [DELETE /users/1]
Action can only performed by an authenticated admin..

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        {
            "message": "user Deleted Successfully"
        }

        
        
## Documents [/documents]


### Create Document [POST /documents]
It allows a user to create a new document as below.
This can only be done by an existing user and should be logged in to generate the token placed in the header
+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            
    + Body
    
            {
                "title": "Api Documentation",
                "content": "this is the api documentation for the eDocz system",
                "access": "public",
                "userId": 1,
            }

+ Response 201 (application/json)
    
    + Body

            {
                "doc": {
                "id": 53,
                "title": "Api Documentation",
                "content": "this is the api documentation for the eDocz system",
                "access": "public",
                "userId": 1,
                "updatedAt": "2017-07-19T08:13:28.442Z",
                "createdAt": "2017-07-19T08:13:28.442Z"
            },
            "message": "Document Created Successfully"
            }

### List all documents without offset [GET /documents]
The user is able to perform this opeartion provided he or she is authenticated and can view the public documents
+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        [
            {
                "id": 3,
                "title": "dfghj",
                "content": "dsfgh",
                "access": "public",
                "createdAt": "2017-07-18T08:38:42.490Z",
                "updatedAt": "2017-07-18T08:38:42.490Z",
                "userId": 1
            }
        ]

### List all documents with offset [GET /documents/?limit=1&offset=0]
The user is able to perform this opeartion provided he or she is authenticated.
For this operation, the user can limit number of documents and from which document number to retrieve.
+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        {
            "doc": [
            {
                "id": 13,
                "title": "ww weqweqwe",
                "content": "wqwq eqweqweqweqweqerwerwer",
                "access": "public",
                "createdAt": "2017-07-18T11:28:55.697Z",
                "updatedAt": "2017-07-18T11:28:55.697Z",
                "userId": 1
            }
        ],
        "message": "Request Successful"
        }

### List  document by Id [GET /documents/1]
The user is able to perform this opeartion provided he or she is authenticated and knows the document's id
+ Request (application/json)
     + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
            

+ Response 200 (application/json)

        {
            "id": 3,
            "title": "dfghj",
            "content": "dsfgh",
            "access": "public",
            "createdAt": "2017-07-18T08:38:42.490Z",
            "updatedAt": "2017-07-18T08:38:42.490Z",
            "userId": 1
        }

### Edit  document by Id [PUT /documents/1]
To perform edit of the document he or she must be authenticated and knows the document's id

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    
    + Body
    
            {
                "title": "Edited Api Documentation",
                "content": "this is the api documentation for the eDocz system",
                "access": "public",
                "userId": 1,
            }        

+ Response 200 (application/json)

        {
            "message": "Document updated Successfully."
        }


### Delete  document by Id [DELETE /documents/1]
To perform delete of the document he or she must be authenticated and knows the document's id

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        {
            "message": "Document Deleted Successfully"
        }


### Search  document by title [GET /search/documents/?q=api]
To perform this operation user must be authenticated.
This opeartion allows a user to search a document using characters of the title.

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        [
            {
                "id": 53,
                "title": "Api Documentation",
                "content": "this is the api documentation for the eDocz system",
                "access": "public",
                "createdAt": "2017-07-19T08:13:28.442Z",
                "updatedAt": "2017-07-19T08:13:28.442Z",
                "userId": 1
            }
        ]


### Count documents [GET /count/documents]
To perform this operation user must be authenticated.
This opeartion allows a user to get count of all public documents and retrieves the documents too.

+ Request (application/json)
    + Headers

            x-access-token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZVR5cGUiOiJhZG1pbiIsImlhdCI6MTUwMDQ1MTk4MCwiZXhwIjoxNTAwNDc3NzIwfQ.eXCThaTBDa7oZ85l5gg9rDiOl4jmWHg7h4MojYvdMfk"
    

+ Response 200 (application/json)

        {
            "doc": {
                "count": 8,
                "rows": [
                    {
                        "id": 13,
                        "title": "ww weqweqwe",
                        "content": "wqwq eqweqweqweqweqerwerwer",
                        "access": "public",
                        "createdAt": "2017-07-18T11:28:55.697Z",
                        "updatedAt": "2017-07-18T11:28:55.697Z",
                        "userId": 1
                    },
                    {
                        "id": 15,
                        "title": "sds",
                        "content": "dsfsdds",
                        "access": "public",
                        "createdAt": "2017-07-18T12:30:31.658Z",
                        "updatedAt": "2017-07-18T12:30:31.658Z",
                        "userId": 1
                    },
                    {
                        "id": 19,
                        "title": "doc by eunice",
                        "content": "doc by eunice",
                        "access": "public",
                        "createdAt": "2017-07-18T14:07:17.380Z",
                        "updatedAt": "2017-07-18T14:07:17.380Z",
                        "userId": 4
                    },
                    {
                        "id": 20,
                        "title": "eunice created for defense",
                        "content": "Eunice did this for defense",
                        "access": "public",
                        "createdAt": "2017-07-18T14:07:38.226Z",
                        "updatedAt": "2017-07-18T14:07:38.226Z",
                        "userId": 4
                    },
                    {
                        "id": 21,
                        "title": "more on public domain",
                        "content": "more public ones",
                        "access": "public",
                        "createdAt": "2017-07-18T14:08:01.043Z",
                        "updatedAt": "2017-07-18T14:08:01.043Z",
                        "userId": 4
                    },
                    {
                        "id": 22,
                        "title": "defense in public",
                        "content": "defense in public",
                        "access": "public",
                        "createdAt": "2017-07-18T14:08:17.408Z",
                        "updatedAt": "2017-07-18T14:08:17.408Z",
                        "userId": 4
                    },
                    {
                        "id": 23,
                        "title": "more public docs",
                        "content": "enough of public",
                        "access": "public",
                        "createdAt": "2017-07-18T14:08:42.755Z",
                        "updatedAt": "2017-07-18T14:08:42.755Z",
                        "userId": 4
                    },
                    {
                        "id": 53,
                        "title": "Api Documentation",
                        "content": "this is the api documentation for the eDocz system",
                        "access": "public",
                        "createdAt": "2017-07-19T08:13:28.442Z",
                        "updatedAt": "2017-07-19T08:13:28.442Z",
                        "userId": 1
                    }
                ]
            }
        }